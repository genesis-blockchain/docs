{
  "swagger": "2.0",
  "info": {
    "version": "1.0.2",
    "title": "Interactive Gbl API",
    "description": "gbl",
    "termsOfService": "",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "gbl.app",
  "basePath": "/",
  "schemes": [
    "https",
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/get_version": {
      "get": {
        "summary": "get version of Gbl",
        "description": "Returns version information of connected Gbl node/websocket.\n",
        "tags": [
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "$ref": "#/definitions/get_version"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_volume": {
      "get": {
        "summary": "get volume marketing history",
        "description": "Returns the market volume for the past 24 hours.\n",
        "tags": [
          "Market History Api",
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_vesting_delegations": {
      "get": {
        "summary": "get vesting delegations",
        "description": "Returns the vesting delegations by an account. Parameters: delegator_account:string; start_account:string; limit:int up to 1000\n",
        "parameters": [
          {
            "name": "delegator_account",
            "in": "query",
            "description": "Queries up to 10 vesting delegations by \ufffdGblit\ufffd.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "Gblit"
          },
          {
            "name": "start_account",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "string",
            "default": null
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit.",
            "required": true,
            "type": "number",
            "format": "number",
            "default": 10
          }
        ],
        "tags": [
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_account_count": {
      "get": {
        "summary": "number of accounts",
        "description": "Get Number of Accounts from Gbl\n",
        "tags": [
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "integer",
              "items": {
                "$ref": "#/definitions/get_account_count"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_chain_properties": {
      "get": {
        "summary": "get chain properties",
        "description": "get chain properties\n",
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Condenser Api"
        ]
      }
    },
    "/get_community": {
      "get": {
        "summary": "get community",
        "description": "get community\n",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "hive-125125"
          },
          {
            "name": "observer",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "alice"
          }
        ],
        "tags": [
          "Bridge"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_ranked_posts": {
      "get": {
        "summary": "get ranked posts in community",
        "description": "get ranked posts in community\nsort could be:\ntrending\nhot\ncreated\npromoted\npayout\npayout_comments\nmuted\n",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "trending"
          },
          {
            "name": "tag",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string",
            "default": ""
          },
          {
            "name": "observer",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "alice"
          }
        ],
        "tags": [
          "Bridge"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/list_all_subscriptions": {
      "get": {
        "summary": "List all subscriptions to a community for an account.",
        "description": "",
        "parameters": [
          {
            "name": "account",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "eGblapp"
          }
        ],
        "tags": [
          "Bridge"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/list_community_roles": {
      "get": {
        "summary": "List community roles and labels for each account in the community.",
        "description": "",
        "parameters": [
          {
            "name": "community",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "hive-125125"
          }
        ],
        "tags": [
          "Bridge"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/account_notifications": {
      "get": {
        "summary": "Account notifications.",
        "description": "",
        "parameters": [
          {
            "name": "account",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "alice"
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "type": "number",
            "format": "number",
            "default": 10
          }
        ],
        "tags": [
          "Bridge"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_config": {
      "get": {
        "summary": "get config",
        "description": "get config\n",
        "tags": [
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_dynamic_global_properties": {
      "get": {
        "summary": "get_dynamic_global_properties",
        "description": "get_dynamic_global_properties\n",
        "tags": [
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_feed": {
      "get": {
        "summary": "get_feed",
        "description": "Returns a list of items in an account\ufffds feed. Parameters: account:string; start_entry_id:int; limit:int up to 500\n",
        "parameters": [
          {
            "name": "account",
            "in": "query",
            "description": "Queries the account named Gblit starting on the first item, up to 1 result.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "Gblit"
          },
          {
            "name": "start_entry_id",
            "in": "query",
            "description": "limit.",
            "required": true,
            "type": "number",
            "format": "number",
            "default": "10"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit.",
            "required": true,
            "type": "number",
            "format": "number",
            "default": 10
          }
        ],
        "tags": [
          "Condenser Api",
          "Follow Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_feed_entries": {
      "get": {
        "summary": "get_feed_entries",
        "description": "Returns a list of items in an account\ufffds feed. Parameters: account:string; start_entry_id:int; limit:int up to 500\n",
        "parameters": [
          {
            "name": "account",
            "in": "query",
            "description": "Queries the account named Gblit starting on the first item, up to 1 result.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "good-kar"
          },
          {
            "name": "start_entry_id",
            "in": "query",
            "description": "limit.",
            "required": true,
            "type": "number",
            "format": "number",
            "default": "10"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit.",
            "required": true,
            "type": "number",
            "format": "number",
            "default": 10
          }
        ],
        "tags": [
          "Condenser Api",
          "Follow Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_feed_history": {
      "get": {
        "summary": "get_feed_history",
        "description": "Returns the history of price feed values.\n",
        "tags": [
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_current_median_history_price": {
      "get": {
        "summary": "get_current_median_history_price",
        "description": "get_current_median_history_price\n",
        "tags": [
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_hardfork_version": {
      "get": {
        "summary": "get_hardfork_version",
        "description": "get_hardfork_version\n",
        "tags": [
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_next_scheduled_hardfork": {
      "get": {
        "summary": "get_next_scheduled_hardfork",
        "description": "get_next_scheduled_hardfork\n",
        "tags": [
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_witness_count": {
      "get": {
        "summary": "get_witness_count",
        "description": "get_witness_count\n",
        "tags": [
          "Witness Api",
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/lookup_witness_accounts": {
      "get": {
        "summary": "lookup_witness_accounts",
        "description": "lookup_witness_accounts regex search\n",
        "parameters": [
          {
            "name": "lowerBoundName",
            "in": "query",
            "description": "lowerBoundName.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "good-kar"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit.",
            "required": true,
            "type": "number",
            "format": "number",
            "default": 10
          }
        ],
        "tags": [
          "Condenser Api",
          "Witness Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_witness_schedule": {
      "get": {
        "summary": "get_witness_schedule",
        "description": "get_witness_schedule\n",
        "tags": [
          "Witness Api",
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_witnesses": {
      "get": {
        "summary": "get_witnesses",
        "description": "get_witnesses\n",
        "parameters": [
          {
            "name": "witnessIds",
            "in": "query",
            "description": "witnessIds.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "[\"231\",\"12286\"]"
          }
        ],
        "tags": [
          "Witness Api",
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_witness_by_account": {
      "get": {
        "summary": "get_witness_by_account",
        "description": "get_witness_by_account\n",
        "parameters": [
          {
            "name": "accountName",
            "in": "query",
            "description": "witness account name.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "good-karma"
          }
        ],
        "tags": [
          "Witness Api",
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_witnesses_by_vote": {
      "get": {
        "summary": "get_witnesses_by_vote",
        "description": "get_witnesses_by_vote\n",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "from witness.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "good-karma"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "tags": [
          "Witness Api",
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_active_witnesses": {
      "get": {
        "summary": "get_active_witnesses",
        "description": "get_active_witnesses\n",
        "tags": [
          "Witness Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/witness_update": {
      "get": {
        "summary": "witness_update",
        "description": "witness_update\n",
        "parameters": [
          {
            "name": "owner",
            "in": "query",
            "description": "witness name",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "good-karma"
          },
          {
            "name": "url",
            "in": "query",
            "description": "url.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": ""
          },
          {
            "name": "block_signing_key",
            "in": "query",
            "description": "block_signing_key.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "STM...."
          },
          {
            "name": "fee",
            "in": "query",
            "description": "fee.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "0.000"
          },
          {
            "name": "props",
            "in": "query",
            "description": "props.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "{\"account_creation_fee\":\"20.000 Gbl\",\"maximum_block_size\":65536,\"sbd_interest_rate\":100}"
          }
        ],
        "tags": [
          "Witness Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_market_history": {
      "get": {
        "summary": "get_market_history",
        "description": "Returns the market history for the internal SBD:Gbl market.\n",
        "parameters": [
          {
            "name": "bucket_seconds",
            "in": "query",
            "description": "Queries up to 10 vesting delegations by \ufffdGblit\ufffd.",
            "required": true,
            "type": "number",
            "format": "int",
            "default": 15
          },
          {
            "name": "start",
            "in": "query",
            "description": "timestamp start",
            "required": true,
            "type": "number",
            "format": "int32"
          },
          {
            "name": "end",
            "in": "query",
            "description": "timestamp end",
            "required": true,
            "type": "number",
            "format": "int32"
          }
        ],
        "tags": [
          "Market History Api",
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_market_history_buckets": {
      "get": {
        "summary": "get_market_history_buckets",
        "description": "Returns the bucket seconds being tracked by the plugin.\n",
        "tags": [
          "Market History Api",
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_miner_queue": {
      "get": {
        "summary": "get_miner_queue",
        "description": "get_miner_queue\n",
        "tags": [
          "Witness Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_methods": {
      "get": {
        "summary": "jsonrpc.get_methods",
        "description": "Returns a list of methods supported by the JSON RPC API.\n",
        "tags": [
          "Jsonrpc"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_signature": {
      "get": {
        "summary": "jsonrpc.get_signature",
        "description": "Returns the signature information for a JSON RPC method including the arguments and expected response JSON.\n",
        "parameters": [
          {
            "name": "method",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "Jsonrpc"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_liquidity_queue": {
      "get": {
        "summary": "get_liquidity_queue",
        "description": "get_liquidity_queue\n",
        "parameters": [
          {
            "name": "startAccount",
            "in": "query",
            "description": "account name.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "good-karma"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "tags": [
          "Market History Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_open_orders": {
      "get": {
        "summary": "get_open_orders",
        "description": "get_open_orders\n",
        "parameters": [
          {
            "name": "owner",
            "in": "query",
            "description": "account name.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "good-karma"
          }
        ],
        "tags": [
          "Market History Api",
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_order_book": {
      "get": {
        "summary": "get_order_book",
        "description": "get_order_book\n",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "limit.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "tags": [
          "Market History Api",
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_ticker": {
      "get": {
        "summary": "get ticker",
        "description": "Returns the market ticker for the internal SBD:Gbl market.\n",
        "tags": [
          "Market History Api",
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_trending_categories": {
      "get": {
        "summary": "get trending categories",
        "description": "get tags\n",
        "parameters": [
          {
            "name": "after",
            "in": "query",
            "description": "after.",
            "required": false,
            "type": "string",
            "format": "string",
            "default": "Gbl"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limits.",
            "required": false,
            "type": "number",
            "format": "number",
            "default": 10
          }
        ],
        "tags": [
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_trending_tags": {
      "get": {
        "summary": "get trending categories",
        "description": "get tags\n",
        "parameters": [
          {
            "name": "afterTag",
            "in": "query",
            "description": "category.",
            "required": false,
            "type": "string",
            "format": "string",
            "default": "Gbl"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limits.",
            "required": false,
            "type": "number",
            "format": "int",
            "default": 10
          }
        ],
        "tags": [
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "An array of products",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_active_votes": {
      "get": {
        "summary": "get_active_votes",
        "description": "get_active_votes\n",
        "parameters": [
          {
            "name": "author",
            "in": "query",
            "description": "account name.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "smooth"
          },
          {
            "name": "permlink",
            "in": "query",
            "description": "permlink of post.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "test"
          }
        ],
        "tags": [
          "Tags Api",
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_content": {
      "get": {
        "summary": "get content",
        "description": "get content\n",
        "parameters": [
          {
            "name": "author",
            "in": "query",
            "description": "author.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "smooth"
          },
          {
            "name": "permlink",
            "in": "query",
            "description": "permlink.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "test"
          }
        ],
        "tags": [
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_content_replies": {
      "get": {
        "summary": "get content replies",
        "description": "get content replies\n",
        "parameters": [
          {
            "name": "author",
            "in": "query",
            "description": "author.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "smooth"
          },
          {
            "name": "permlink",
            "in": "query",
            "description": "permlink.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "test"
          }
        ],
        "tags": [
          "Tags Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_discussions_by_trending": {
      "get": {
        "summary": "get discussions by trending",
        "description": "get discussions, | query example {\"limit\":\"10\", \"tag\":\"Gbl\"} OR {\"start_author\":\"author\", \"permlink\":\"permlink\"} for pagination\n",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "query object.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "{\"tag\":\"Gbl\", \"limit\": \"10\"}"
          }
        ],
        "tags": [
          "Tags Api",
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_discussions_by_trending30": {
      "get": {
        "summary": "get discussions by trending 30",
        "description": "get discussions, | query example {\"limit\":\"10\", \"tag\":\"Gbl\"} OR {\"start_author\":\"author\", \"permlink\":\"permlink\"} for pagination\n",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "query object.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "{\"tag\":\"Gbl\", \"limit\": \"10\"}"
          }
        ],
        "tags": [
          "Tags Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_discussions_by_created": {
      "get": {
        "summary": "get discussions",
        "description": "get discussions, | query example {\"limit\":\"10\", \"tag\":\"Gbl\"} OR {\"start_author\":\"author\", \"permlink\":\"permlink\"} for pagination\n",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "query object.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "{\"tag\":\"Gbl\", \"limit\": \"10\"}"
          }
        ],
        "tags": [
          "Tags Api",
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_discussions_by_active": {
      "get": {
        "summary": "get discussions",
        "description": "get discussions, | query example {\"limit\":\"10\", \"tag\":\"Gbl\"} OR {\"start_author\":\"author\", \"permlink\":\"permlink\"} for pagination\n",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "query object.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "{\"tag\":\"Gbl\", \"limit\": \"10\"}"
          }
        ],
        "tags": [
          "Tags Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_discussions_by_promoted": {
      "get": {
        "summary": "get discussions",
        "description": "get discussions, | query example {\"limit\":\"10\", \"tag\":\"Gbl\"} OR {\"start_author\":\"author\", \"permlink\":\"permlink\"} for pagination\n",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "query object.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "{\"tag\":\"Gbl\", \"limit\": \"10\"}"
          }
        ],
        "tags": [
          "Tags Api",
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_discussions_by_cashout": {
      "get": {
        "summary": "get discussions",
        "description": "get discussions, | query example {\"limit\":\"10\", \"tag\":\"Gbl\"} OR {\"start_author\":\"author\", \"permlink\":\"permlink\"} for pagination\n",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "query object.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "{\"tag\":\"Gbl\", \"limit\": \"10\"}"
          }
        ],
        "tags": [
          "Tags Api",
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_post_discussions_by_payout": {
      "get": {
        "summary": "Return a list of post discussions by payout",
        "description": "Return a list discussions based on payout\nget discussions, | query example {\"limit\":\"10\", \"tag\":\"Gbl\", \"filter_tags\":\"Gbl\"} OR {\"select_author\":\"author\", \"select_tags\":\"Gbl\"} for pagination,\n",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "query object.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "{\"tag\":\"Gbl\", \"limit\": \"10\"}"
          }
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Condenser Api"
        ]
      }
    },
    "/get_comment_discussions_by_payout": {
      "get": {
        "summary": "get discussions",
        "description": "Return a list discussions based on payout\nget discussions, | query example {\"limit\":\"10\", \"tag\":\"Gbl\", \"filter_tags\":\"Gbl\", \"select_author\":\"Gbl\"} OR {\"start_author\":\"author\", \"permlink\":\"permlink\"} for pagination,\n",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "query object.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "{\"tag\":\"Gbl\", \"limit\": \"10\"}"
          }
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Tags Api"
        ]
      }
    },
    "/get_discussions": {
      "get": {
        "summary": "Returns the discussions given an author and permlink",
        "description": "**get discussions**, | **query example**  *{\"author\":\"author\", \"permlink\":\"permlink\"}*\n",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "query object.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "{\"author\":\"\", \"permlink\": \"\"}"
          }
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Tags Api"
        ]
      }
    },
    "/get_discussions_by_votes": {
      "get": {
        "summary": "get discussions by votes",
        "description": "get discussions, | query example {\"limit\":\"10\", \"tag\":\"Gbl\"} OR {\"start_author\":\"author\", \"permlink\":\"permlink\"} for pagination\n",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "query object.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "{\"tag\":\"Gbl\", \"limit\": \"10\"}"
          }
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Tags Api",
          "Condenser Api"
        ]
      }
    },
    "/get_discussions_by_children": {
      "get": {
        "summary": "get discussions",
        "description": "get discussions, | query example {\"limit\":\"10\", \"tag\":\"Gbl\"} OR {\"start_author\":\"author\", \"permlink\":\"permlink\"} for pagination\n",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "query object.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "{\"tag\":\"Gbl\", \"limit\": \"10\"}"
          }
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Tags Api",
          "Condenser Api"
        ]
      }
    },
    "/get_discussions_by_hot": {
      "get": {
        "summary": "get discussions by hot",
        "description": "get discussions, | query example {\"limit\":\"10\", \"tag\":\"Gbl\"} OR {\"start_author\":\"author\", \"permlink\":\"permlink\"} for pagination\n",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "query object.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "{\"tag\":\"Gbl\", \"limit\": \"10\"}"
          }
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Tags Api",
          "Condenser Api"
        ]
      }
    },
    "/get_discussions_by_feed": {
      "get": {
        "summary": "get discussions by feed",
        "description": "get discussions, | query example {\"limit\":\"10\", \"tags\":\"good-karma\"} OR {\"start_author\":\"author\", \"permlink\":\"permlink\"} for pagination\n",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "query object.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "{\"tag\":\"good-karma\", \"limit\": \"10\"}"
          }
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Tags Api",
          "Condenser Api"
        ]
      }
    },
    "/get_discussions_by_blog": {
      "get": {
        "summary": "get discussions",
        "description": "get discussions, | query example {\"limit\":\"10\", \"tag\":\"good-karma\"} OR {\"start_author\":\"author\", \"permlink\":\"permlink\"} for pagination\n",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "query object.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "{\"tag\":\"good-karma\", \"limit\": \"10\"}"
          }
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Tags Api",
          "Condenser Api"
        ]
      }
    },
    "/get_discussions_by_comments": {
      "get": {
        "summary": "get discussions",
        "description": "get discussions, | query example {\"start_author\":\"author\", \"start_permlink\":\"permlink\", \"limi\":\"10\"}\n",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "query object.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "{\"start_author\":\"smooth\",\"start_permlink\":\"test\",\"limit\":\"10\"}"
          }
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Tags Api",
          "Condenser Api"
        ]
      }
    },
    "/get_discussions_by_author_before_date": {
      "get": {
        "summary": "get_discussions_by_author_before_date",
        "description": "get_discussions_by_author_before_date\n",
        "parameters": [
          {
            "name": "author",
            "in": "query",
            "description": "account name.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "smooth"
          },
          {
            "name": "startPermlink",
            "in": "query",
            "description": "permlink of post.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "test"
          },
          {
            "name": "beforeDate",
            "in": "query",
            "description": "date and time.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "2016-07-23T22:00:06"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit query.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Tags Api"
        ]
      }
    },
    "/get_replies_by_last_update": {
      "get": {
        "summary": "get_replies_by_last_update",
        "description": "get_replies_by_last_update\n",
        "parameters": [
          {
            "name": "startAuthor",
            "in": "query",
            "description": "account name.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "smooth"
          },
          {
            "name": "startPermlink",
            "in": "query",
            "description": "permlink of post.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "test"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit query.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Condenser Api"
        ]
      }
    },
    "/get_reward_fund": {
      "get": {
        "summary": "get_reward_fund",
        "description": "Returns information about the current reward funds.\n",
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "description": "post",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "post"
          }
        ],
        "tags": [
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_state": {
      "get": {
        "summary": "get_state",
        "description": "get_state\n",
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "description": "account name.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "/@good-karma"
          }
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Condenser Api"
        ]
      }
    },
    "/get_account_reputations": {
      "get": {
        "summary": "get_account_reputations",
        "description": "Returns a list of account reputations. Parameters: account_lower_bound:string; limit:int up to 1000\n",
        "parameters": [
          {
            "name": "account_lower_bound",
            "in": "query",
            "description": "account name.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "Gblit"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "up to 1000",
            "required": true,
            "type": "number",
            "format": "int",
            "default": 10
          }
        ],
        "tags": [
          "Condenser Api",
          "Reputation Api",
          "Follow Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_account_votes": {
      "get": {
        "summary": "get_account_votes",
        "description": "get_account_votes\n",
        "parameters": [
          {
            "name": "voter",
            "in": "query",
            "description": "account name.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "smooth"
          }
        ],
        "tags": [
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/get_account_votes"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_account_history": {
      "get": {
        "summary": "Account history",
        "description": "Account history\n",
        "parameters": [
          {
            "name": "account",
            "in": "query",
            "description": "name of account",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "good-karma"
          },
          {
            "name": "from",
            "in": "query",
            "description": "from",
            "type": "number",
            "format": "number",
            "default": 10
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "type": "number",
            "format": "number",
            "default": 10
          }
        ],
        "tags": [
          "Condenser Api",
          "Account History Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "number",
              "items": {
                "$ref": "#/definitions/get_account_history"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_owner_history": {
      "get": {
        "summary": "get_owner_history",
        "description": "get_owner_history\n",
        "parameters": [
          {
            "name": "account",
            "in": "query",
            "description": "account name.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "good-karma"
          }
        ],
        "tags": [
          "Market History Api",
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_accounts": {
      "get": {
        "summary": "Return accounts, queried by name.",
        "description": "Get Accounts from Gbl\n",
        "parameters": [
          {
            "name": "names[]",
            "in": "query",
            "description": "name of account",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "[\"good-karma\", \"fabien\"]"
          }
        ],
        "tags": [
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/get_accounts"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_conversion_requests": {
      "get": {
        "summary": "get conversation",
        "description": "get conversation requests of account\n",
        "parameters": [
          {
            "name": "accountName",
            "in": "query",
            "description": "account name.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "good-karma"
          }
        ],
        "tags": [
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_recovery_request": {
      "get": {
        "summary": "get_recovery_request",
        "description": "get_recovery_request\n",
        "parameters": [
          {
            "name": "account",
            "in": "query",
            "description": "account name.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "good-karma"
          }
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Condenser Api"
        ]
      }
    },
    "/get_resource_params": {
      "get": {
        "summary": "get_resource_params",
        "description": "Exports all relevant resource size constants, in particular the measurement-based execution time parameters\n",
        "tags": [
          "RC Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_resource_pool": {
      "get": {
        "summary": "get_resource_params",
        "description": "Exports all relevant resource size constants, in particular the measurement-based execution time parameters\n",
        "tags": [
          "RC Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/lookup_account_names": {
      "get": {
        "summary": "lookup_account_names",
        "description": "lookup_account_names example of accountNames [\"good-karma\", \"fabien\"]\n",
        "parameters": [
          {
            "name": "accountNames",
            "in": "query",
            "description": "accountNames [\"good-karma\", \"fabien\"].",
            "required": true,
            "type": "string",
            "format": "array",
            "default": "[\"good-karma\",\"fabien\"]"
          }
        ],
        "tags": [
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/lookup_accounts": {
      "get": {
        "summary": "lookup_accounts",
        "description": "lookup_accounts regex search\n",
        "parameters": [
          {
            "name": "lowerBoundName",
            "in": "query",
            "description": "lowerBoundName.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "good-kar"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit.",
            "required": true,
            "type": "number",
            "format": "number",
            "default": 10
          }
        ],
        "tags": [
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_follow_count": {
      "get": {
        "summary": "get_follow_count",
        "description": "get_follow_count\n",
        "parameters": [
          {
            "name": "account",
            "in": "query",
            "description": "account name.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "good-karma"
          }
        ],
        "tags": [
          "Follow Api",
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_followers": {
      "get": {
        "summary": "get_followers",
        "description": "get_followers\n",
        "parameters": [
          {
            "name": "following",
            "in": "query",
            "description": "account name.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "good-karma"
          },
          {
            "name": "startFollower",
            "in": "query",
            "description": "account name from followers for pagination.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "fabien"
          },
          {
            "name": "followType",
            "in": "query",
            "description": "follow type blog, etc.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "blog"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "size of array for pagination.",
            "required": true,
            "type": "number",
            "format": "number",
            "default": 10
          }
        ],
        "tags": [
          "Follow Api",
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_following": {
      "get": {
        "summary": "get_following",
        "description": "get_following\n",
        "parameters": [
          {
            "name": "follower",
            "in": "query",
            "description": "account name.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "good-karma"
          },
          {
            "name": "startFollowing",
            "in": "query",
            "description": "account name from followings for pagination.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "fabien"
          },
          {
            "name": "followType",
            "in": "query",
            "description": "follow type blog, etc.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "blog"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "size of array for pagination.",
            "required": true,
            "type": "number",
            "format": "number",
            "default": 10
          }
        ],
        "tags": [
          "Follow Api",
          "Account By Key Api",
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_expiring_vesting_delegations": {
      "get": {
        "summary": "get_expiring_vesting_delegations",
        "description": "Returns the expiring vesting delegations for an account. Parameters: account:string, after:timestamp\n",
        "parameters": [
          {
            "name": "account",
            "in": "query",
            "description": "account name.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "Gblit"
          },
          {
            "name": "after",
            "in": "query",
            "description": "sample Queries for expiring vesting after January 1st, 2018.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "default": 7595656
          }
        ],
        "tags": [
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_escrow": {
      "get": {
        "summary": "get_escrow",
        "description": "get_escrow\n",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "account name.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "good-karma"
          },
          {
            "name": "escrowId",
            "in": "query",
            "description": "id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Condenser Api"
        ]
      }
    },
    "/get_withdraw_routes": {
      "get": {
        "summary": "get_withdraw_routes",
        "description": "get_withdraw_routes\n",
        "parameters": [
          {
            "name": "account",
            "in": "query",
            "description": "account name.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "clayop"
          },
          {
            "name": "withdrawRouteType",
            "in": "query",
            "description": "withdrawRouteType.",
            "required": false,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_account_bandwidth": {
      "get": {
        "summary": "get_account_bandwidth",
        "description": "get_account_bandwidth\n",
        "parameters": [
          {
            "name": "account",
            "in": "query",
            "description": "account name.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "good-karma"
          },
          {
            "name": "bandwidthType",
            "in": "query",
            "description": "bandwidthType.",
            "required": false,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "Witness Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_reblogged_by": {
      "get": {
        "summary": "follow_api.get_reblogged_by",
        "description": "Returns a list of account reputations\n",
        "parameters": [
          {
            "name": "account_lower_bound",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit number",
            "required": true,
            "type": "number",
            "format": "int32",
            "default": 0
          }
        ],
        "tags": [
          "Follow Api",
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/get_reserve_ratio"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_reserve_ratio": {
      "get": {
        "summary": "get_reserve_ratio",
        "description": "Returns the current reserve ratio\n",
        "tags": [
          "Witness Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/get_reserve_ratio"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_savings_withdraw_from": {
      "get": {
        "summary": "get_savings_withdraw_from",
        "description": "get_savings_withdraw_from\n",
        "parameters": [
          {
            "name": "account",
            "in": "query",
            "description": "account name.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "jesta"
          }
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Condenser Api"
        ]
      }
    },
    "/get_savings_withdraw_to": {
      "get": {
        "summary": "get_savings_withdraw_to",
        "description": "get_savings_withdraw_to\n",
        "parameters": [
          {
            "name": "account",
            "in": "query",
            "description": "account name.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "jesta"
          }
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Condenser Api"
        ]
      }
    },
    "/get_block": {
      "get": {
        "summary": "get block",
        "description": "get block\n",
        "parameters": [
          {
            "name": "blockNum",
            "in": "query",
            "description": "get block content/transactions.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "default": 7595656
          }
        ],
        "tags": [
          "Block Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_block_header": {
      "get": {
        "summary": "get block header",
        "description": "get block header\n",
        "parameters": [
          {
            "name": "blockNum",
            "in": "query",
            "description": "get block header, witness, timestamp.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "default": 7595656
          }
        ],
        "tags": [
          "Block Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_blog": {
      "get": {
        "summary": "get blog",
        "description": "Returns the list of blog entries for an account. Parameters: account:string; start_entry_id:int; limit:int up to 500\n",
        "parameters": [
          {
            "name": "account",
            "in": "query",
            "description": "account name",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "Gblit"
          },
          {
            "name": "start_entry_id",
            "in": "query",
            "description": "start id",
            "required": true,
            "type": "number",
            "format": "int32",
            "default": 0
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit number",
            "required": true,
            "type": "number",
            "format": "int32",
            "default": 0
          }
        ],
        "tags": [
          "Follow Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_blog_authors": {
      "get": {
        "summary": "get blog authors",
        "description": "Returns a list of authors that have had their content reblogged on a given blog account. Parameters: account:string\n",
        "parameters": [
          {
            "name": "account",
            "in": "query",
            "description": "account name",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "Gblit"
          }
        ],
        "tags": [
          "Follow Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_blog_entries": {
      "get": {
        "summary": "get blog entries",
        "description": "Returns a list of blog entries for an account. Parameters: account:string; start_entry_id:int; limit:int up to 500\n",
        "parameters": [
          {
            "name": "account",
            "in": "query",
            "description": "account name",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "Gblit"
          },
          {
            "name": "start_entry_id",
            "in": "query",
            "description": "start id",
            "required": true,
            "type": "number",
            "format": "int32",
            "default": 0
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit number",
            "required": true,
            "type": "number",
            "format": "int32",
            "default": 0
          }
        ],
        "tags": [
          "Follow Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_ops_in_block": {
      "get": {
        "summary": "get_ops_in_block",
        "description": "get_ops_in_block\n",
        "parameters": [
          {
            "name": "blockNum",
            "in": "query",
            "description": "block number.",
            "required": true,
            "type": "integer",
            "format": "int32",
            "default": 8836129
          },
          {
            "name": "onlyVirtual",
            "in": "query",
            "description": "onlyVirtual.",
            "required": true,
            "type": "boolean",
            "format": "bool",
            "default": false
          }
        ],
        "tags": [
          "Follow Api",
          "Account History Api",
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_tags_by_author": {
      "get": {
        "summary": "Returns a list of tags used by an author. Parameters author:string",
        "description": "Returns a list of tags used by an author. Parameters author:string\n",
        "parameters": [
          {
            "name": "author",
            "in": "query",
            "description": "account name.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "Gblit"
          }
        ],
        "tags": [
          "Tags Api",
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_trade_history": {
      "get": {
        "summary": "get trade history",
        "description": "Returns the trade history for the internal SBD:Gbl market.\n",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "timestamp start",
            "required": true,
            "type": "number",
            "format": "int32"
          },
          {
            "name": "end",
            "in": "query",
            "description": "timestamp end.",
            "required": true,
            "type": "number",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit.",
            "required": true,
            "type": "number",
            "format": "int",
            "default": 1000
          }
        ],
        "tags": [
          "Market History Api",
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_transaction_hex": {
      "get": {
        "summary": "get_transaction_hex",
        "description": "get_transaction_hex\n",
        "parameters": [
          {
            "name": "trx",
            "in": "query",
            "description": "transaction hex.",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Condenser Api"
        ]
      }
    },
    "/get_transaction": {
      "get": {
        "summary": "get_transaction",
        "description": "get_transaction\n",
        "parameters": [
          {
            "name": "trxId",
            "in": "query",
            "description": "transaction id.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": "b86745936b1e471c0efb78d0f80bd331f984d11f"
          }
        ],
        "tags": [
          "Account History Api",
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/get_required_signatures": {
      "get": {
        "summary": "get_required_signatures",
        "description": "get_required_signatures\n",
        "parameters": [
          {
            "name": "trx",
            "in": "query",
            "description": "transaction.",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "availableKeys",
            "in": "query",
            "description": "availableKeys.",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Condenser Api"
        ]
      }
    },
    "/get_potential_signatures": {
      "get": {
        "summary": "get_potential_signatures",
        "description": "get_potential_signatures\n",
        "parameters": [
          {
            "name": "trx",
            "in": "query",
            "description": "transaction.",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Condenser Api"
        ]
      }
    },
    "/verify_authority": {
      "get": {
        "summary": "verify_authority",
        "description": "Returns true if the transaction has all of the required signatures.",
        "parameters": [
          {
            "name": "trx",
            "in": "query",
            "description": "transaction.",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Condenser Api"
        ]
      }
    },
    "/verify_account_authority": {
      "get": {
        "summary": "verify_account_authority",
        "description": "condenser_api.verify_account_authority\n",
        "parameters": [
          {
            "name": "nameOrId",
            "in": "query",
            "description": "nameOrId.",
            "required": true,
            "type": "string",
            "format": "string"
          },
          {
            "name": "signers",
            "in": "query",
            "description": "signers.",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Condenser Api"
        ]
      }
    },
    "/get_key_references": {
      "get": {
        "summary": "get_key_references",
        "description": "get_key_references\n",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "description": "key.",
            "required": true,
            "type": "string",
            "format": "string",
            "default": ""
          }
        ],
        "tags": [
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/broadcast_transaction": {
      "get": {
        "summary": "condenser_api.broadcast_transaction",
        "description": "Used to broadcast a transaction.\n",
        "parameters": [
          {
            "name": "trx",
            "in": "query",
            "description": "transaction.",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "Condenser Api",
          "Network Broadcast Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/broadcast_transaction"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/broadcast_transaction_synchronous": {
      "get": {
        "summary": "broadcast_transaction_synchronous",
        "description": "broadcast_transaction_synchronous\n",
        "parameters": [
          {
            "name": "trx",
            "in": "query",
            "description": "transaction.",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "Condenser Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/broadcast_block": {
      "get": {
        "summary": "broadcast_block",
        "description": "broadcast_block\n",
        "parameters": [
          {
            "name": "b",
            "in": "query",
            "description": "block.",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "tags": [
          "Network Broadcast Api"
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/broadcast_block"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/broadcast_transaction_with_callback": {
      "get": {
        "summary": "WARNING: can only be used in Gbl node or in scripts broadcast_transaction_with_callback\n",
        "description": "broadcast_transaction_with_callback\n",
        "parameters": [
          {
            "name": "confirmationCallback",
            "in": "query",
            "description": "confirmationCallback function.",
            "type": "string",
            "format": "string"
          },
          {
            "name": "trx",
            "in": "query",
            "description": "transaction.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Condenser Api"
        ]
      }
    },
    "/set_max_block_age": {
      "get": {
        "summary": "WARNING: can only be used in Gbl node or in scripts set_max_block_age\n",
        "description": "set_max_block_age\n",
        "parameters": [
          {
            "name": "maxBlockAge",
            "in": "query",
            "description": "maxBlockAge.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Condenser Api"
        ]
      }
    },
    "/set_pending_transaction_callback": {
      "get": {
        "summary": "WARNING: can only be used in Gbl node or in scripts set_pending_transaction_callback\n",
        "description": "set_pending_transaction_callback \n",
        "parameters": [
          {
            "name": "cb",
            "in": "query",
            "description": "callback function.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Condenser Api"
        ]
      }
    },
    "/set_block_applied_callback": {
      "get": {
        "summary": "WARNING: can only be used in Gbl node or in scripts set_block_applied_callback\n",
        "description": "set_block_applied_callback \n",
        "parameters": [
          {
            "name": "cb",
            "in": "query",
            "description": "callback function.",
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Condenser Api"
        ]
      }
    },
    "/cancel_all_subscriptions": {
      "get": {
        "summary": "WARNING: can only be used in Gbl node or in scripts cancel_all_subscriptions\n",
        "description": "cancel_all_subscriptions \n",
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Condenser Api"
        ]
      }
    },
    "/get_api_by_name": {
      "get": {
        "summary": "get_api_by_name",
        "description": "get_api_by_name\n",
        "parameters": [
          {
            "name": "apiName",
            "in": "query",
            "description": "apiName.",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Result",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/_"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "tags": [
          "Condenser Api"
        ]
      }
    },
    "/swagger": {
      "x-swagger-pipe": "swagger_raw"
    }
  },
  "definitions": {
    "_": {
      "type": "object",
      "description": "describe output object json and properties",
      "properties": {
        "example": {
          "type": "string",
          "description": "description of example"
        },
        "example_": {
          "type": "string",
          "description": "description of example_ etc."
        }
      }
    },
    "broadcast_block": {
      "type": "object",
      "properties": {
        "previous": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "witness": {
          "type": "string"
        },
        "transaction_merkle_root": {
          "type": "string"
        },
        "extensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "witness_signature": {
          "type": "string"
        },
        "transactions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "get_reserve_ratio": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "average_block_size": {
          "type": "number"
        },
        "current_reserve_ratio": {
          "type": "number"
        },
        "max_virtual_badwidth": {
          "type": "string"
        }
      }
    },
    "get_version": {
      "type": "object",
      "properties": {
        "blockchain_version": {
          "type": "string",
          "description": "release version of blockchain"
        },
        "Gbl_revision": {
          "type": "string",
          "description": "Gbl revision hash"
        },
        "fc_revision": {
          "type": "string",
          "description": "fc library revision hash"
        }
      }
    },
    "get_accounts": {
      "type": "object",
      "description": "Return accounts, querid by name.",
      "properties": {
        "id": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "type": "object",
          "properties": {
            "weight_threshold": {
              "type": "integer"
            },
            "account_auths": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "key_auths": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "active": {
          "type": "object",
          "properties": {
            "weight_threshold": {
              "type": "number"
            },
            "account_auths": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "key_auths": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "posting": {
          "type": "object",
          "properties": {
            "weight_threshold": {
              "type": "number"
            },
            "account_auths": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "key_auths": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "memo_key": {
          "type": "string"
        },
        "json_metadata": {
          "type": "string"
        },
        "proxy": {
          "type": "string"
        },
        "last_owner_update": {
          "type": "string"
        },
        "last_account_update": {
          "type": "string"
        },
        "created": {
          "type": "string"
        },
        "mined": {
          "type": "boolean"
        },
        "recovery_account": {
          "type": "string"
        },
        "last_account_recovery": {
          "type": "string"
        },
        "reset_account": {
          "type": "string"
        },
        "comment_count": {
          "type": "number"
        },
        "lifetime_vote_count": {
          "type": "number"
        },
        "post_count": {
          "type": "number"
        },
        "can_vote": {
          "type": "boolean"
        },
        "voting_power": {
          "type": "number"
        },
        "last_vote_time": {
          "type": "string"
        },
        "balance": {
          "type": "string"
        },
        "savings_balance": {
          "type": "string"
        },
        "sbd_balance": {
          "type": "string"
        },
        "sbd_seconds": {
          "type": "string"
        },
        "sbd_seconds_last_update": {
          "type": "string"
        },
        "sbd_last_interest_payment": {
          "type": "string"
        },
        "savings_sbd_balance": {
          "type": "string"
        },
        "savings_sbd_seconds": {
          "type": "string"
        },
        "savings_sbd_seconds_last_update": {
          "type": "string"
        },
        "savings_sbd_last_interest_payment": {
          "type": "string"
        },
        "savings_withdraw_requests": {
          "type": "number"
        },
        "reward_sbd_balance": {
          "type": "string"
        },
        "reward_Gbl_balance": {
          "type": "string"
        },
        "reward_vesting_balance": {
          "type": "string"
        },
        "reward_vesting_Gbl": {
          "type": "string"
        },
        "vesting_shares": {
          "type": "string"
        },
        "delegated_vesting_shares": {
          "type": "string"
        },
        "received_vesting_shares": {
          "type": "string"
        },
        "vesting_withdraw_rate": {
          "type": "string"
        },
        "next_vesting_withdrawal": {
          "type": "string"
        },
        "withdrawn": {
          "type": "number"
        },
        "to_withdraw": {
          "type": "number"
        },
        "withdraw_routes": {
          "type": "number"
        },
        "curation_rewards": {
          "type": "number"
        },
        "posting_rewards": {
          "type": "number"
        },
        "proxied_vsf_votes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "witnesses_voted_for": {
          "type": "number"
        },
        "last_post": {
          "type": "string"
        },
        "last_root_post": {
          "type": "string"
        },
        "vesting_balance": {
          "type": "string"
        },
        "reputation": {
          "type": "string"
        },
        "transfer_history": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "market_history": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "post_history": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "vote_history": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "other_history": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "witness_votes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tags_usage": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "guest_bloggers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "get_account_bandwidth": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "account": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "averange_bandwidth": {
          "type": "number"
        },
        "lifetime_bandwidth": {
          "type": "string"
        },
        "last_bandwidth_update": {
          "type": "string"
        }
      }
    },
    "get_account_count": {
      "type": "number",
      "description": "number of registered accounts"
    },
    "get_account_reputations": {
      "type": "object",
      "description": "list of account reputations"
    },
    "get_account_history": {
      "type": "object",
      "description": "history of all operations for a given account"
    },
    "get_account_votes": {
      "type": "object",
      "description": "return all votes by an account",
      "properties": {
        "authorperm": {
          "type": "string"
        },
        "weight": {
          "type": "string"
        },
        "rshares": {
          "type": "string"
        },
        "percent": {
          "type": "string"
        },
        "time": {
          "type": "string"
        }
      }
    },
    "Accounts": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Account name"
        },
        "description": {
          "type": "string",
          "description": "Description of product."
        },
        "json_metadata": {
          "type": "string",
          "description": "Json data of account"
        },
        "created": {
          "type": "string",
          "description": "Account created date and time."
        },
        "reputation": {
          "type": "string",
          "description": "Account reputation."
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}